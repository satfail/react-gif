{"version":3,"sources":["AddCategory.js","GifGridItem.js","helpers/getGifs.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setIpuntValue","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","categoriaProp","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGif","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAkB5C,OACI,mCACA,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAG1BR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAMlB,SAEG,uBACCO,KAAM,OACNC,MAAOT,EACPU,SAtBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,e,QCLnBG,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAGlC,OADAC,QAAQC,IAAIJ,EAAGC,EAAMC,GAEjB,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,4BAAIA,Q,uBCRCO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbR,EAFa,iDAEkCS,UAAUF,GAF5C,+DAGAG,MAAMV,GAHN,cAGbW,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACFlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAGgB,EAAIC,cAAP,aAAG,EAAYC,iBAAiBlB,QATxB,kBAYZc,GAZY,4CAAH,sDCKXK,EAAU,SAAC,GAAqB,IAApBZ,EAAmB,EAAnBA,cAAmB,ECFjB,SAACA,GAAmB,IAAD,EAChBvB,mBAAS,CAC/B6B,KAAK,GACLO,SAAQ,IAH8B,mBACnCC,EADmC,KAC5BC,EAD4B,KAsB1C,OAdAC,qBAAW,WACPjB,EAAQC,GACPiB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLT,KAAKY,EACLL,SAAQ,MAEb,WAGR,CAACb,IAEGc,EDhBgBM,CAAYpB,GAA5BM,EAJiC,EAIjCA,KAAKO,EAJ4B,EAI5BA,QAEZ,OADAnB,QAAQC,IAAIW,EAAKO,GAEb,qCACA,oBAAIjB,UAAU,oCAAd,SAAmDI,IAElDa,GAAY,mBAAGjB,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEQU,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEUA,GADCA,EAAIlB,aEftB8B,EAAe,WAAM,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ8C,EAAWd,KAAI,SAAAvB,GAAS,OACpB,cAAC,EAAD,CAEAe,cAAiBf,GADVA,Y,MCjB/BsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5e8196e6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes  from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setIpuntValue] = useState('');\r\n   \r\n    const handleInputChange = (e) =>{\r\n        setIpuntValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            \r\n            //No tengo acceso a las categorias solo al set, necesito un callback\r\n            setCategorias(categoria => [inputValue, ...categoria ]);\r\n            setIpuntValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n           <input\r\n            type =\"text\"\r\n            value={inputValue}\r\n            onChange= { handleInputChange}\r\n           />\r\n\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","    export const getGifs = async(categoriaProp) =>{\r\n        \r\n        const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoriaProp)}&limit=10&api_key=4AV7lOy246Dpo0V2uDzCY7A22oLIDEIh`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map ( img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url : img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n\r\n    }","// import React, {useState,useEffect} from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGif } from './hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({categoriaProp}) => {\r\n\r\n\r\n    \r\n    const {data,loading} = useFetchGif(categoriaProp);\r\n    console.log(data,loading);\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{categoriaProp}</h3>\r\n        {/* If sin else */}\r\n        {loading &&  <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n                data.map( img => (\r\n                    <GifGridItem \r\n                        key = {img.id}\r\n                        { ... img} \r\n                    />\r\n                ))\r\n            }  \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (categoriaProp) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    //2º Argumento arreglo de dependencias, si va vacío solo dispara 1 vez\r\n    \r\n    useEffect( () => {\r\n        getGifs(categoriaProp)\r\n        .then(imgs =>{\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            }, 1500);\r\n\r\n        });\r\n    }, [categoriaProp]) //Si cambia la categoria se ejecuta el useEffect\r\n    \r\n    return state; //{data :[], loading:True}\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategorias([ ...categorias, 'Nueva Categoria']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias = {setCategorias}></AddCategory>\r\n            <hr />\r\n            {/* <button onClick ={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                        <GifGrid \r\n                        key = {categoria}\r\n                        categoriaProp = {categoria} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n<hr />\n\n"],"sourceRoot":""}